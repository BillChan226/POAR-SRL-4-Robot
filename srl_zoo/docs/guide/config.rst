.. _config:

Config Files
------------

Base Config
~~~~~~~~~~~

Config common to all dataset can be found in
`configs/default.json <https://github.com/araffin/srl-zoo/blob/master/configs/default.json>`__.

Dataset config
~~~~~~~~~~~~~~

All datasets must be placed in the ``data/`` folder. Each dataset must
contain a ``dataset_config.json`` file, an example can be found
`here <https://github.com/araffin/srl-zoo/blob/master/configs/example_dataset_config.json>`__. This config file
describes specific variables to this dataset.

Experiment Config
~~~~~~~~~~~~~~~~~

Experiment config file is generated by the ``pipeline.py`` script. An
example can be found `here <https://github.com/araffin/srl-zoo/blob/master/configs/example_exp_config.json>`__.

Dataset Format
--------------

In order to use SRL methods on a dataset, this dataset must be
preprocessed and formatted as in the `example
dataset <https://drive.google.com/open?id=154qMJHgUnzk0J_Hxmr2jCnV1ipS7o1D5>`__.
We recommend you downloading this example dataset to have a concrete and
working example of what a preprocessed dataset looks like.

.. note::

  If you use data generated with the `RL Repo <https://github.com/araffin/robotics-rl-srl>`__, the dataset will
  be already preprocessed, so you don't need to bother about this step.

The dataset format is as follows:

0. You must provide a dataset config file (see previous section) that
   contains at least if the ground truth is the relative position or not
1. Images are grouped by episode in different folders (``record_{03d}/``
   folders)
2. At the root of the dataset folder, preprocessed_data.npz contains
   np.ndarrays ('episode_starts', 'rewards', 'actions')
3. At the root of the dataset folder, ground_truth.npz contains
   np.ndarrays ('target_positions', 'ground_truth_states',
   'images_path')

The exact format for each np.ndarray can be found in the example dataset
(or in the `RL Repo <https://github.com/araffin/robotics-rl-srl>`__).
Note: the variables 'arm_states' and 'button_positions' were renamed
'ground_truth_states' and 'target_positions'


**SRL Server for Reinforcement Learning [Experimental]**

This feature is currently experimental. It will launch a server that will learn a srl model and send a response to the RL client when  it is ready.

::

  python server.py
